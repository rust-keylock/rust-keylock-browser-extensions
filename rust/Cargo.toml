[package]
name = "rust-keylock-browser-extension"
version = "0.1.0"
authors = ["aston <astonbitecode@gmail.com>"]
description = "WASM used in the browser plugin for rust-keylock; a password manager with goals to be Secure, Simple to use, Portable and Extensible"
keywords = ["password", "manager", "safe", "encryption", "key"]
license = "GPL-3.0"
documentation = "https://github.com/rust-keylock/rust-keylock-browser-extensions"
repository = "https://github.com/rust-keylock/rust-keylock-browser-extensions"
homepage = "https://rust-keylock.github.io/"
readme = "README.md"
categories = ["cryptography", "authentication"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
lazy_static = "1.5.0"
wasm-bindgen = "0.2.100"
wasm-bindgen-futures = "0.4"
reqwest= {version = "0.12"}
spake2 = "0.4"
aes-gcm = "0.10"
base64 = "0.22"
# getrandom version should be 0.2 because this is used by spake2 0.4. Until spake2 uses a laer getrandom version, it cannot be upgraded
getrandom = { version = "0.2", default-features = false, features = ["js"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

[dependencies.web-sys]
version = "0.3.77"
features = ['Document', 'Element', 'HtmlElement', 'Node', 'Window']

[dev-dependencies]
wasm-bindgen-test = "0.3.50"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
